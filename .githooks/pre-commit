#!/bin/bash
# Sinphas√© Pre-commit Hook - Team Shared Version
# Location: .githooks/pre-commit

set -e

PROJECT_ROOT="$(git rev-parse --show-toplevel)"
cd "$PROJECT_ROOT"

echo "üîç Running Sinphas√© governance check..."

# Check if evaluator script exists
if [ ! -f "scripts/evaluator/sinphase_cost_evaluator.py" ]; then
    echo "‚ö†Ô∏è  Sinphas√© evaluator script not found - skipping governance check"
    echo "    Expected: scripts/evaluator/sinphase_cost_evaluator.py"
    exit 0
fi

# Make script executable
chmod +x scripts/evaluator/sinphase_cost_evaluator.py

# Run Sinphas√© evaluation
if ! python3 scripts/evaluator/sinphase_cost_evaluator.py --project-root . --report; then
    echo "‚ùå Sinphas√© evaluation failed"
    exit 1
fi

# Check for violations
if [ -f "SINPHASE_GOVERNANCE_REPORT.md" ]; then
    VIOLATIONS=$(grep -c "GOVERNANCE ZONE" SINPHASE_GOVERNANCE_REPORT.md || echo "0")
    
    if [ "$VIOLATIONS" -gt 0 ]; then
        echo ""
        echo "üö® COMMIT BLOCKED: Sinphas√© governance violations detected"
        echo "‚ùå $VIOLATIONS components exceed threshold (C > 0.6)"
        echo ""
        echo "üìã Violating components:"
        grep -A 1 "GOVERNANCE ZONE" SINPHASE_GOVERNANCE_REPORT.md | head -10
        echo ""
        echo "üîß To fix violations:"
        echo "1. Run: python3 scripts/evaluator/sinphase_cost_evaluator.py --report"
        echo "2. Review full report: cat SINPHASE_GOVERNANCE_REPORT.md"
        echo "3. Isolate violating components to root-dynamic-c/"
        echo "4. Ensure all components have C ‚â§ 0.6"
        echo ""
        echo "üí° To bypass this check (NOT RECOMMENDED):"
        echo "   git commit --no-verify"
        exit 1
    else
        echo "‚úÖ All components comply with Sinphas√© governance"
    fi
else
    echo "‚ö†Ô∏è  Governance report not generated - check evaluator script"
    exit 1
fi

echo "‚úÖ Sinphas√© governance check passed"
